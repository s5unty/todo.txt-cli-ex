#!/bin/bash
###############################################################################
##
# FILE:         add
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 26-Dec-2011
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# COPYRIGHT: (C) 2010-2013 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)add	$Id$	todo.txt-cli-ex
###############################################################################

action=$1
shift

[ "$action" = "usage" ] && {
    echo "    $(basename $0) \"THING I NEED TO DO t:tomorrow u:(next week)\""
    echo "      Adds THING I NEED TO DO to your todo.txt file on its own line."
    echo "      Dates in m: markers can be specified in various formats and will be"
    echo "      canonicalized to YYYY-MM-DD."
    echo ""
    exit
}

# Note: We only offer the canonicalization of the date for add and actions based
# on add, but not for all other actions that modify tasks (e.g. append, replace,
# etc.) This is meant as a convenient shortcut when adding new tasks; existing
# task markers should be modified through dedicated actions (e.g. schedule).
task=$*
markers=$(echo "$task" | grep -o '[^ ]*[[:graph:]]:\(([^)]\+)\|[^ ]\+\)' | grep '^[[:graph:]]:')
IFS=$'\n'
for marker in $markers
do
    originalDateString=${marker#[[:graph:]]:}
    dateString=${originalDateString#(}
    dateString=${dateString%)}

    if [[ "$dateString" =~ ^[0-9]+$ ]]; then
        # 'date' also accepts numbers (and always interprets them as the current
        # day), but numbers should represent ITEM# for task references here.
        continue
    fi

    canonicalDate=$(date -d "$dateString" +%F 2>/dev/null) || continue
    [ "$canonicalDate" = "$originalDateString" ] && continue

    # Multiple human dates (e.g. "today", "now", and especially all time
    # specifications) resolve to the current day. Don't canonicalize them unless
    # "today" is used.
    [ "$originalDateString" != 'today' ] && [ "$canonicalDate" = "$(date +%F)" ] && continue


    task=${task/${marker}/${marker:0:2}${canonicalDate}}
done
unset IFS

eval '"$TODO_FULL_SH" command' ${ADDACTION:-add} '"$task"'
