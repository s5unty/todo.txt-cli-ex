#!/bin/bash
###############################################################################
##
# FILE:         latestDueTasks
# PRODUCT:      todo.txt-cli-ex
# AUTHOR:       Ingo Karkat <ingo@karkat.de>
# DATE CREATED: 28-Nov-2011
#
###############################################################################
# CONTENTS:
#
# REMARKS:
#
# ATTENTION:
#   This filter is to be used in post_filter_command, before formatting and
#   coloring of priorities. It won't work as a TODOTXT_FINAL_FILTER!
#
# COPYRIGHT: (C) 2010-2013 Ingo Karkat
#   This program is free software; you can redistribute it and/or modify it
#   under the terms of the GNU General Public License.
#   See http://www.gnu.org/copyleft/gpl.txt
#
# @(#)latestDueTasks	$Id$	todo.txt-cli-ex
###############################################################################

export TODOTXT_FILTER_UNTIL_DUE_DAYSPAN=${TODOTXT_FILTER_UNTIL_DUE_DAYSPAN:-3}

awk -v date=$1 '
function getThreshold(date) {
    if (date == "") {
        return mktime(strftime("%Y %m %d 00 00 00", systime()))
    } else {
        return mktime(gensub(/([0-9]{4})[-/]([0-9]{1,2})[-/]([0-9]{1,2})/, "\\1 \\2 \\3 00 00 00", "g", date))
    }
}
BEGIN {
    threshold = getThreshold(date)
    span = 86400 * ENVIRON["TODOTXT_FILTER_UNTIL_DUE_DAYSPAN"]
}
/^ *[0-9]+ (x |\([A-Z]\) )/ {
    # Do not process done and prioritized tasks.
    print
    next
}
/ [tuz]:[0-9]{4}[-/][0-9]{1,2}[-/][0-9]{1,2}/ {
    date = mktime(gensub(/^.* [tuz]:([0-9]{4})[-/]([0-9]{1,2})[-/]([0-9]{1,2})([^0-9].*)?$/, "\\1 \\2 \\3 00 00 00", "g"))
    if (date - span > threshold) {
        next
    }
}
{ print }
'
